{
    "name": "WolframColor",
    "author": "Sublime HQ Pty Ltd, Dmitri Voronianski; Taliesin Beynon",
    "variables":
    {
        "black": "hsl(0, 0%, 0%)",
        "blue": "hsl(210, 50%, 60%)",
        "blue-vibrant": "hsl(210, 60%, 60%)",
        "blue2": "hsla(210, 13%, 40%, 0.7)",
        "blue3": "hsl(210, 15%, 22%)",
        "blue4": "hsl(210, 13%, 45%)",
        "teal": "hsl(180, 36%, 54%)",
        "blue6": "hsl(221, 12%, 69%)",
        "blue7": "hsl(210, 40%, 69%)",
        "green": "hsl(114, 31%, 68%)",
        "grey": "hsl(0, 0%, 20%)",
        "orange": "hsl(32, 93%, 66%)",
        "orangeDim": "hsl(40, 20%, 68%)",
        "orange2": "hsl(32, 85%, 55%)",
        "orange3": "hsl(40, 94%, 68%)",
        "pink": "hsl(300, 30%, 68%)",
        "purple": "hsl(250, 35%, 60%)",
        "purpleDim": "hsl(350, 35%, 70%)",
        "red": "hsl(357, 79%, 65%)",
        "red2": "hsl(13, 93%, 66%)",
        "red-vibrant": "hsl(0, 93%, 75%)",
        "white": "hsl(0, 0%, 100%)",
        "white2": "hsl(0, 0%, 97%)",
        "white3": "hsl(219, 28%, 88%)",
        "whiteDim": "hsl(210, 20%, 70%)",

        "plain": "hsl(210, 30%, 75%)",
        "internal": "hsl(10, 30%, 75%)",
        "plainDim": "hsl(200, 20%, 60%)",

        "typesetting": "hsl(40, 94%, 68%)",
        "typesetting": "hsl(50, 35%, 70%)",

        "debug": "hsl(357, 79%, 65%)",
        "debugBg": "color(var(debug) alpha(0.25))",

        "obj": "hsl(180, 50%, 75%)",
        "fe": "color(var(plain) blend(var(orange3) 60%))",
        "opt": "color(var(plain) alpha(0.8))",
        "form": "hsl(40, 64%, 68%)",
        "dform": "hsl(30, 64%, 68%)",
        "box": "hsl(50, 54%, 68%)",
        "cell": "hsl(55, 54%, 68%)",
        "style": "hsl(50, 20%, 75%)",
        "gfx": "hsl(30, 35%, 70%)",
        "plot": "hsl(15, 35%, 70%)",
        "io": "color(var(plain) blend(var(red2) 60%))",

        "sysOpt": "color(var(plain) alpha(0.75))",
        "userOpt": "color(var(plain) alpha(0.8))",
        "objOpt": "color(var(obj) alpha(0.85))",

        "objHead": "color(var(obj) alpha(0.8))",
        "feHead": "color(var(fe) alpha(0.8))",
        "gfxHead": "color(var(gfx) blend(var(plain) 85%))",
        "gfxDir": "color(var(gfx) blend(var(plain) 55%))",
        "styleDir": "color(var(style) blend(var(plain) 85%))",
        "gfxPrim": "var(gfx)",


        "boxOpt": "color(var(box) blend(var(plain) 75%))",
        "cellOpt": "color(var(cell) blend(var(plain) 75%))",
        "styleOpt": "color(var(style) blend(var(plain) 85%))",
        "boxOpt": "color(var(box) blend(var(plain) 75%))",
        "formOpt": "color(var(form) blend(var(plain) 75%))",
        "dformOpt": "color(var(dform) blend(var(plain) 75%))",
        "gfxOpt": "color(var(gfx) blend(var(plain) 75%))",
        "plotOpt": "color(var(plot) blend(var(plain) 75%))",
        "ioOpt": "color(var(io) alpha(0.9))",
        "nbOpt": "color(var(io) alpha(0.8))",

        "plotFn": "var(plot)",
        "ioFn": "var(io)",
        "feFn": "var(fe)",
        "fmtFn": "var(special)",

        "formBg": "color(var(form) alpha(0.1))",
        "boxBg": "color(var(box) alpha(0.1))",

        "type": "hsl(200, 30%, 75%)",
        "typeBg": "color(var(type) alpha(0.1))",

        "hold": "color(var(plain) blend(var(red-vibrant) 20%))",
        "holdBg": "color(var(hold) alpha(0.1))",

        "string": "hsla(114, 31%, 68%, 0.8)",
        "msg": "var(orange)",

        "comment": "hsl(221, 12%, 55%)",
        "stringDelim" : "hsla(114, 31%, 68%, 0.5)",
        "unkBg": "hsl(210, 15%, 33%)",
        "fn": "hsl(200, 55%, 66%)",

        "coreFn":   "hsl(210, 30%, 77%)",
        "sysFn":    "hsl(210, 30%, 72%)",
        "userFn":   "hsl(210, 30%, 80%)",

        "holdFn":   "color(var(plain) blend(var(red-vibrant) 60%))",
        "seq":      "color(var(plain) blend(var(orange) 65%))",
        "seqBg":    "color(var(seq) alpha(0.1))",

        "usrSym": "color(var(plain) blend(var(plainDim) 30%))",
        "varBase": "hsl(210, 60%, 69%)",
        "globVar": "var(varBase)",
        "variable": "color(var(plain) blend(var(varBase) 10%))",
        "variable": "color(var(plain) blend(var(varBase) 10%))",
        "userVar": "color(var(plain) blend(var(varBase) 10%))",
        "mutating": "color(var(plain) blend(var(red) 50%))",

        "transBg": "color(var(userVar) alpha(0.1))",

        "tagSym": "var(usrSym)",
        "tagBg": "color(var(tagSym) alpha(0.1))",

        "boundVar": "hsl(114, 31%, 50%)",

        "pat": "hsl(200, 40%, 69%)",
        "strpat": "color(var(pat) blend(var(string) 50%))",
        "special": "hsl(13, 73%, 66%)",
        "specVar": "color(var(special) blend(var(plain) 50%))",
        "ctrlFn": "color(var(plain) blend(var(red-vibrant) 50%))",

        "cache": "color(var(plain) blend(var(teal) 50%))",
        "head1": "color(hsla(250, 40%, 80%, 0.9) blend(var(plain) 40%))",
        "head2": "hsl(250, 40%, 80%)",
        "head3": "hsl(250, 70%, 80%)",
        "head": "var(head1)",
        "typeHead": "var(head1)",
        "typeSym": "color(hsl(250, 40%, 80%) blend(var(plain) 40%))",
        "dataHead": "var(head2)",
        "symHead": "color(hsl(250, 70%, 80%) blend(var(plain) 40%))",
        "slot": "hsl(50, 60%, 60%)",
        "slot2": "hsl(40, 60%, 60%)",
        "op": "var(blue7)",
        "pred": "hsl(200, 55%, 66%)",

        "meta": "hsl(219, 28%, 80%)",

    },
    "globals":
    {
        "foreground": "var(white3)",
        "background": "var(blue3)",
        "accent": "var(blue-vibrant)",
        "caret": "var(orange)",
        "line_highlight": "var(blue2)",
        "selection": "var(blue2)",
        "selection_border": "var(blue4)",
        "inactive_selection": "var(blue2)",
        "misspelling": "var(red)",
        "shadow": "color(var(black) alpha(0.25))",
        "active_guide": "var(teal)",
        "stack_guide": "color(var(teal) alpha(0.5))",
        "highlight": "var(teal)",
        "find_highlight_foreground": "var(grey)",
        "find_highlight": "var(orange3)",
        "brackets_options": "underline",
        "brackets_foreground": "var(orange)",
        "bracket_contents_options": "underline",
        "bracket_contents_foreground": "var(teal)",
        "tags_options": "stippled_underline",
        "tags_foreground": "var(pink)"
    },
    "rules":
    [
        {"name": "SpecVar"       , "scope": "var.spec"                       , "foreground": "var(specVar)"      , "font_style": "glow"},
        {"name": "Spec"          , "scope": "spec"                                , "foreground": "var(special)"},
        {"name": "Hi"            , "scope": "meta.def"                                                , "font_style": "stippled_underline"},
        {"name": "Slot"          , "scope": "keyword.other.Slot"                                      , "foreground": "var(slot)"            , "font_style": "bold"},
        {"name": "SlotSeq"       , "scope": "keyword.other.SlotSequence"                              , "foreground": "var(slot)"            , "font_style": "bold"},
        {"name": "MsgName"       , "scope": "keyword.operator.MessageName"                            , "foreground": "var(msg)"},
        {"name": "SpecOp"        , "scope": "keyword.operator.special"                                , "foreground": "var(msg)"},
        {"name": "SlotSym"       , "scope": "sym.slot"                           , "foreground": "var(slot2)"           , "font_style": "bold"},
        {"name": "SlotVar"       , "scope": "var.slot"                          , "foreground": "var(slot2)"           , "font_style": "bold"},
        {"name": "FnSym"         , "scope": "entity.name.function"                                    , "foreground": "var(usrSym)",},
        {"name": "LocalVarDef"   , "scope": "entity.name.constant var.local"             , "foreground": "var(usrSym)",},
        {"name": "Var"           , "scope": "var"                               , "foreground": "var(userVar)" },
        {"name": "TransVar"      , "scope": "var.temp"                     , "foreground": "var(userVar)", "background": "var(transBg)"},
        {"name": "GlobVar1"      , "scope": "var.global"                                 , "foreground": "var(globVar)"       , "font_style": ""},
        {"name": "GlobVar1Hi"    , "scope": "meta.def var.global"                        , "foreground": "var(globVar)"       , "font_style": "stippled_underline"},
        {"name": "BndPatSym"     , "scope": "var.local.pat"                                  , "foreground": "var(boundVar)"},
        {"name": "LocalSym"      , "scope": "var.local"                                          , "foreground": "var(usrSym)"},
        {"name": "TagSym"        , "scope": "sym.tag"                            , "foreground": "var(tagSym)"          , "background": "var(tagBg)"},
        {"name": "TagVar"        , "scope": "var.tag"                           , "foreground": "var(tagSym)"          , "background": "var(tagBg)"},
        {"name": "DummySym"      , "scope": "sym.dummy"                                            , "foreground": "var(tagSym)"          , "background": "var(tagBg)"},
        {"name": "UnexpectedSym" , "scope": "sym.unexpected"                                       , "foreground": "var(usrSym)"      , "background": "var(unkBg)"},
        {"name": "UnkFunc"       , "scope": "var.local.unk"                             , "foreground": "var(usrSym)"      , "background": "var(unkBg)"},
        {"name": "UnkVar"        , "scope": "var.global.unk"                            , "foreground": "var(usrSym)"      , "background": "var(unkBg)"},
        {"name": "LocSym"        , "scope": "var.global"                                         , "foreground": "var(userVar)"},
        {"name": "UnkLocSym"     , "scope": "var.global.unk"                            , "foreground": "var(userVar)"         , "background": "var(unkBg)"          , "font_style": "bold"},
        {"name": "FnUser"        , "scope": "fn.local"                                       , "foreground": "var(fn)"        , "font_style": "bold"},
        {"name": "Oper"          , "scope": "keyword.operator"                                        , "foreground": "var(op)"},
        {"name": "CoreFn"        , "scope": "fn.fmt"                                   , "foreground": "var(fmtFn)",},
        {"name": "CoreFn"        , "scope": "fn.core"                                   , "foreground": "var(coreFn)",},
        {"name": "SysFn"         , "scope": "fn.sys"                                , "foreground": "var(sysFn)",},
        {"name": "SysFn"         , "scope": "fn.gfx"                                , "foreground": "var(sysFn)",},
        {"name": "HoldFn"        , "scope": "fn.hold"                                   , "foreground": "var(holdFn)",},
        {"name": "SeqFn"         , "scope": "fn.seq"                               , "foreground": "var(seq)", "background": "var(seqBg)"},
        {"name": "UserFn"        , "scope": "fn.user"                                   , "foreground": "var(userFn)",},
        {"name": "???"           , "scope": "sym.int"                               , "foreground": "var(internal)",},
        {"name": "MsgFn"         , "scope": "fn.msg"                                , "foreground": "var(msg)",},
        {"name": "IOFn"          , "scope": "fn.io"                                     , "foreground": "var(ioFn)"},
        {"name": "FEFn"          , "scope": "fn.fe"                                     , "foreground": "var(feFn)"},
        {"name": "BoxFn"         , "scope": "fn.box"                            , "foreground": "var(box)",},
        {"name": "BoxFn"         , "scope": "fn.num"                            , "foreground": "var(sysFn)",},
        {"name": "BoxFn"         , "scope": "fn.plot"                            , "foreground": "var(plotFn)",},
        {"name": "BoxSym"        , "scope": "sym.box"                            , "foreground": "var(box)"             , "background": "var(boxBg)"},
        {"name": "TypeSym"       , "scope": "sym.type"                           , "foreground": "var(typeSym)"},
        {"name": "DebugFn"       , "scope": "fn.debug"                      , "foreground": "var(debug)"           , "background": "var(debugBg)"},
        {"name": "GBoxFn"        , "scope": "gfx.box"                   , "foreground": "var(gfx)",},
        {"name": "StyleDir"      , "scope": "dir.style"             , "foreground": "var(styleDir)"        , "font_style": "italic"},
        {"name": "GDir"          , "scope": "dir.gfx"             , "foreground": "var(gfxDir)"        , "font_style": ""},
        {"name": "GDir"          , "scope": "meta.def gfx.dir"    , "foreground": "var(gfxDir)"        , "font_style": "  stippled_underline"},
        {"name": "GfxHead"       , "scope": "head.gfx"                                , "foreground": "var(gfxHead)", "font_style": "bold"},
        {"name": "GfxHeadHi"     , "scope": "meta.def head.gfx"                                , "foreground": "var(gfxHead)", "font_style": "bold  stippled_underline"},
        {"name": "GPrim"         , "scope": "prim.gfx"             , "foreground": "var(gfxPrim)"},
        // {"name": "GPrimHi"         , "scope": "meta.def prim.gfx"         , "foreground": "var(gfx)"        , "font_style": "bold stippled_underline"},
        {"name": "GFn"           , "scope": "gfx"                       , "foreground": "var(gfx)",},
        {"name": "Oper2"         , "scope": "op"                       , "foreground": "var(op)"},
        {"name": "MutFn"         , "scope": "fn.mut"                       , "foreground": "var(plain)"           , "font_style": "glow"},
        {"name": "MutFnHi"       , "scope": "meta.def fn.mut"              , "foreground": "var(plain)"           , "font_style": "glow stippled_underline"},
        {"name": "ObjHead"       , "scope": "head.obj"                         , "foreground": "var(objHead)"           , "font_style": "bold"},
        {"name": "ObjHeadHi"     , "scope": "meta.def head.obj"                , "foreground": "var(objHead)"           , "font_style": "bold stippled_underline"},
        {"name": "FEHead"        , "scope": "head.fe"                                     , "foreground": "var(feHead)", "font_style": "bold"},
        {"name": "IOOpt"         , "scope": "opt.io"         , "foreground": "var(ioOpt)"             , "font_style": "italic"},
        {"name": "IOOptHi"       , "scope": "meta.def opt.io", "foreground": "var(ioOpt)"             , "font_style": "italic stippled_underline"},
        {"name": "NBOpt"         , "scope": "opt.nbook"         , "foreground": "var(nbOpt)"             , "font_style": "italic"},
        {"name": "NBOptHi"       , "scope": "meta.def opt.nbook", "foreground": "var(nbOpt)"             , "font_style": "italic stippled_underline"},
        {"name": "PlotOpt"       , "scope": "opt.plot"         , "foreground": "var(plotOpt)"             , "font_style": "italic"},
        {"name": "PlotOptHi"     , "scope": "meta.def opt.plot", "foreground": "var(plotOpt)"             , "font_style": "italic stippled_underline"},
        {"name": "ObjOpt"        , "scope": "opt.obj"         , "foreground": "var(objOpt)"             , "font_style": "italic"},
        {"name": "ObjOptHi"      , "scope": "meta.def opt.obj", "foreground": "var(objOpt)"             , "font_style": "italic stippled_underline"},
        {"name": "SysOpt"        , "scope": "opt.sys"         , "foreground": "var(sysOpt)"             , "font_style": "italic"},
        {"name": "SysOptHi"      , "scope": "meta.def opt.sys", "foreground": "var(sysOpt)"             , "font_style": "italic stippled_underline"},
        {"name": "UserOpt"       , "scope": "opt"                 , "foreground": "var(userOpt)"             , "font_style": "italic"},
        {"name": "UserOptHi"     , "scope": "meta.def opt"        , "foreground": "var(userOpt)"             , "font_style": "italic stippled_underline"},
        {"name": "CellOpt"       , "scope": "opt.cell"             , "foreground": "var(cellOpt)"          , "font_style": "italic"},
        {"name": "CellOptHi"     , "scope": "meta.def opt.cell"    , "foreground": "var(cellOpt)"          , "font_style": "italic stippled_underline"},
        {"name": "StyleOpt"      , "scope": "opt.style"             , "foreground": "var(styleOpt)"          , "font_style": "italic"},
        {"name": "StyleOptHi"    , "scope": "meta.def opt.style"    , "foreground": "var(styleOpt)"          , "font_style": "italic stippled_underline"},
        {"name": "BoxOpt"        , "scope": "opt.box"             , "foreground": "var(boxOpt)"          , "font_style": "italic"},
        {"name": "BoxOptHi"      , "scope": "meta.def opt.box"    , "foreground": "var(boxOpt)"          , "font_style": "italic stippled_underline"},
        {"name": "FormOpt"       , "scope": "opt.form"             , "foreground": "var(formOpt)"          , "font_style": "italic"},
        {"name": "FormOptHi"     , "scope": "meta.def opt.form"    , "foreground": "var(formOpt)"          , "font_style": "italic stippled_underline"},
        {"name": "DFormOpt"      , "scope": "opt.dyn.form"             , "foreground": "var(dformOpt)"          , "font_style": "italic"},
        {"name": "DFormOptHi"    , "scope": "meta.def sym.dyn.option.form"    , "foreground": "var(dformOpt)"          , "font_style": "italic stippled_underline"},
        {"name": "GfxOpt"        , "scope": "opt.gfx"             , "foreground": "var(gfxOpt)"          , "font_style": "italic"},
        {"name": "GfxOptHi"      , "scope": "meta.def opt.gfx"    , "foreground": "var(gfxOpt)"          , "font_style": "italic stippled_underline"},
        {"name": "PkgDec"        , "scope": "meta.pkg.dec"                          , "foreground": "var(pink)" , "background": "color(var(pink) alpha(0.25))" , "font_style": "bold"},
        {"name": "PkgFn"         , "scope": "meta.pkg.fn"                           , "foreground": "var(pink)" , "background": "color(var(pink) alpha(0.25))" , "font_style": "bold"},
        {"name": "PkgDefCont"    , "scope": "meta.pkg.symlist"},
        {"name": "Scope"         , "scope": "fn.scope"                                , "foreground": "var(pink)",},
        {"name": "ContFlow"      , "scope": "fn.ctrl"                           , "foreground": "var(ctrlFn)",},
        {"name": "Meta"          , "scope": "fn.meta"                                   , "foreground": "var(meta)"            , "font_style": "glow"},
        {"name": "MetaHi"        , "scope": "meta.def fn.meta"                          , "foreground": "var(meta)"            , "font_style": "glow stippled_underline"},
        {"name": "Pred"          , "scope": "pred"                              , "foreground": "var(pred)"},
        {"name": "Pred"          , "scope": "pred"                              , "foreground": "var(pred)"},
        {"name": "RegSym"        , "scope": "var.reg"                               , "foreground": "var(cache)"},
        {"name": "CacheSym"      , "scope": "var.cache"                                  , "foreground": "var(cache)"           , "font_style": "glow"},
        {"name": "CacheSymHi"    , "scope": "fn.cache"                         , "foreground": "var(cache)"           , "font_style": "glow stippled_underline"},
        {"name": "Symbol"        , "scope": "sym"                        , "foreground": "var(plain)"           , "font_style": "italic"},
        {"name": "Symbol2"       , "scope": "meta.def sym"               , "foreground": "var(plain)"           , "font_style": "italic stippled_underline"},
        {"name": "FormSym"       , "scope": "sym.form"                           , "foreground": "var(form)"            , "background": "var(formBg)",},
        {"name": "PatSym"        , "scope": "sym.pat"                , "foreground": "var(pat)"         , "font_style": "italic"},
        {"name": "PatSymHi"      , "scope": "meta.def sym.pat"       , "foreground": "var(pat)"         , "font_style": "italic stippled_underline"},
        {"name": "StrPatSym"     , "scope": "sym.stringpat"          , "foreground": "var(strpat)"          , "font_style": "italic"},
        {"name": "StrPatSymHi"   , "scope": "meta.def sym.stringpat" , "foreground": "var(strpat)"          , "font_style": "italic stippled_underline"},
        {"name": "Head"          , "scope": "head"                          , "foreground": "var(head)"},
        {"name": "TypeHead"      , "scope": "head.type"                             , "foreground": "var(typeHead)"},
        {"name": "DataHead"      , "scope": "head.data"                             , "foreground": "var(dataHead)"},
        {"name": "SymHead"       , "scope": "head.symbolic"                         , "foreground": "var(symHead)"},
        {"name": "FormHead"      , "scope": "head.form"                             , "foreground": "var(form)"},
        {"name": "DFormHead"     , "scope": "head.form.dyn"                             , "foreground": "var(dform)"},
        {"name": "PatHead"       , "scope": "head.pat"                  , "foreground": "var(pat)"},
        {"name": "StrPatHead"    , "scope": "head.stringpattern"            , "foreground": "var(strpat)"},
        {"name": "HoldHead"      , "scope": "head.hold.sys"                     , "foreground": "var(hold)",  "background": "var(holdBg)"},
        {"name": "Deprecated"    , "scope": "depr"                             , "foreground": "var(white2)", "background": "var(orange2)"},
        {"name": "String"              , "scope": "string"                                                          , "foreground": "var(string)"},
        {
            "name": "Comment",
            "scope": "comment, punctuation.definition.comment",
            "foreground": "var(comment)"
        },
        {
            "name": "Message Name",
            "scope": "string.unquoted.messagename",
            "foreground": "var(msg)"
        },
        {
            "name": "String delimiters",
            "scope": "punctuation.definition.string",
            "foreground": "var(stringDelim)"
        },
        {
            "name": "Punctuation",
            "scope": "punctuation.definition - punctuation.definition.numeric.base",
            "foreground": "var(teal)"
        },
        {
            "name": "Number",
            "scope": "constant.numeric",
            "foreground": "var(white3)"
        },
        {
            "name": "Number Suffix",
            "scope": "storage.type.numeric",
            "foreground": "var(pink)",
            "font_style": "italic"
        },
        {
            "name": "Built-in constant",
            "scope": "constant.language",
            "foreground": "var(red)"
        },
        {
            "name": "User-defined constant",
            "scope": "constant.character, constant.other",
            "foreground": "var(pink)"
        },
        {
            "name": "Member Variable",
            "scope": "variable.member",
            "foreground": "var(red)"
        },
        {
            "name": "Punctuation",
            "scope": "punctuation.separator, punctuation.terminator",
            "foreground": "var(blue6)"
        },
        {
            "name": "Punctuation",
            "scope": "punctuation.section",
            "foreground": "var(white3)"
        },
        {
            "name": "Accessor",
            "scope": "punctuation.accessor",
            "foreground": "var(blue6)"
        },
        {
            "name": "Annotation Punctuation",
            "scope": "punctuation.definition.annotation",
            "foreground": "var(teal)"
        },
        {
            "name": "JavaScript Dollar",
            "scope": "variable.other.dollar.only.js, variable.other.object.dollar.only.js, variable.type.dollar.only.js, support.class.dollar.only.js",
            "foreground": "var(teal)"
        },
        {
            "name": "Storage",
            "scope": "storage",
            "foreground": "var(red)"
        },
        {
            "name": "Storage type",
            "scope": "storage.type",
            "foreground": "var(pink)",
            "font_style": "italic"
        },
        {
            "name": "Entity name",
            "scope": "entity.name - (entity.name.section | entity.name.tag | entity.name.label)",
            "foreground": "var(orange)"
        },
        {
            "name": "Inherited class",
            "scope": "entity.other.inherited-class",
            "foreground": "var(teal)",
            "font_style": "italic"
        },
        {
            "name": "Function argument",
            "scope": "variable.parameter",
            "foreground": "var(orange)"
        },
        {
            "name": "Language variable",
            "scope": "variable.language",
            "foreground": "var(red)",
            "font_style": "italic"
        },
        {
            "name": "Tag name",
            "scope": "entity.name.tag",
            "foreground": "var(red)"
        },
        {
            "name": "Tag attribute",
            "scope": "entity.other.attribute-name",
            "foreground": "var(pink)"
        },
        {
            "name": "Function call",
            "scope": "variable.function, variable.annotation",
            "foreground": "var(userVar)"
        },
        {
            "name": "Macro",
            "scope": "support.function.macro",
            "foreground": "var(teal)",
            "font_style": "italic"
        },
        {
            "name": "Library constant",
            "scope": "support.constant",
            "foreground": "var(pink)",
            "font_style": "italic"
        },
        {
            "name": "Library class/type",
            "scope": "support.type, support.class",
            "foreground": "var(blue)",
            "font_style": "italic"
        },
        {
            "name": "Invalid",
            "scope": "invalid",
            "foreground": "var(white2)",
            "background": "var(red)"
        },
        {
            "name": "Inappropriate",
            "scope": "invalid.inappropriate",
            "foreground": "var(red)",
            "background": "none",
            "font_style": "glow"
        },
        {
            "name": "Invalid deprecated",
            "scope": "invalid.deprecated",
            "foreground": "var(white2)",
            "background": "var(orange2)"
        },
        {
            "name": "YAML Key",
            "scope": "entity.name.tag.yaml",
            "foreground": "var(teal)"
        },
        {
            "name": "YAML String",
            "scope": "source.yaml string.unquoted",
            "foreground": "var(white3)"
        },
        {
            "name": "markup headings",
            "scope": "markup.heading",
            "font_style": "bold"
        },
        {
            "name": "markup headings",
            "scope": "markup.heading punctuation.definition.heading",
            "foreground": "var(red2)"
        },
        {
            "name": "markup h1",
            "scope": "markup.heading.1 punctuation.definition.heading",
            "foreground": "var(red)"
        },
        {
            "name": "markup links",
            "scope": "string.other.link, markup.underline.link",
            "foreground": "var(blue)"
        },
        {
            "name": "markup bold",
            "scope": "markup.bold",
            "font_style": "bold"
        },
        {
            "name": "markup italic",
            "scope": "markup.italic",
            "font_style": "italic"
        },
        {
            "name": "markup underline",
            "scope": "markup.underline",
            "font_style": "underline"
        },
        {
            "name": "markup bold/italic",
            "scope": "markup.italic markup.bold | markup.bold markup.italic",
            "font_style": "bold italic"
        },
        {
            "name": "markup bold/underline",
            "scope": "markup.underline markup.bold | markup.bold markup.underline",
            "font_style": "bold underline"
        },
        {
            "name": "markup italic/underline",
            "scope": "markup.underline markup.italic | markup.italic markup.underline",
            "font_style": "italic underline"
        },
        {
            "name": "markup bold/italic/underline",
            "scope": "markup.bold markup.italic markup.underline | markup.bold markup.underline markup.italic | markup.italic markup.bold markup.underline | markup.italic markup.underline markup.bold | markup.underline markup.bold markup.italic | markup.underline markup.italic markup.bold",
            "font_style": "bold italic underline"
        },
        {
            "name": "markup hr",
            "scope": "punctuation.definition.thematic-break",
            "foreground": "var(orange)"
        },
        {
            "name": "markup numbered list bullet",
            "scope": "markup.list.numbered.bullet",
            "foreground": "var(green)"
        },
        {
            "name": "markup blockquote",
            "scope": "markup.quote punctuation.definition.blockquote, markup.list punctuation.definition.list_item",
            "foreground": "var(orange)"
        },
        {
            "name": "markup code",
            "scope": "markup.raw",
            "background": "color(var(blue2) alpha(0.38))"
        },
        {
            "name": "markup code",
            "scope": "markup.raw.inline",
            "background": "color(var(blue2) alpha(0.5))"
        },
        {
            "name": "markup punctuation",
            "scope": "(text punctuation.definition.italic | text punctuation.definition.bold)",
            "foreground": "var(pink)"
        },
        {
            "name": "diff.header",
            "scope": "meta.diff, meta.diff.header",
            "foreground": "var(pink)"
        },
        {
            "name": "diff.deleted",
            "scope": "markup.deleted",
            "foreground": "var(red)"
        },
        {
            "name": "diff.inserted",
            "scope": "markup.inserted",
            "foreground": "var(green)"
        },
        {
            "name": "diff.changed",
            "scope": "markup.changed",
            "foreground": "var(orange)"
        },
        {
            "name": "CSS Properties",
            "scope": "support.type.property-name",
            "foreground": "var(white3)"
        },
        {
            "scope": "constant.numeric.line-number.match",
            "foreground": "var(red)"
        },
        {
            "scope": "message.error",
            "foreground": "var(red)"
        },
        {
            "scope": "diff.deleted",
            "background": "hsla(357, 45%, 60%, 0.15)",
            "foreground_adjust": "l(+ 5%)"
        },
        {
            "scope": "diff.deleted.char",
            "background": "hsla(357, 60%, 60%, 0.30)",
            "foreground_adjust": "l(+ 10%)"
        },
        {
            "scope": "diff.inserted",
            "background": "hsla(180, 45%, 60%, 0.15)",
            "foreground_adjust": "l(+ 5%)"
        },
        {
            "scope": "diff.inserted.char",
            "background": "hsla(180, 60%, 60%, 0.30)",
            "foreground_adjust": "l(+ 10%)"
        },
    ]
}
